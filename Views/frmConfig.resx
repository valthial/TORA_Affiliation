<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAyMjIAMzMzADQ0NAA1NTUANjY2ADc3NwA4ODgAOTk5ADo6OgA7OzsAPDw8AD09PQA+Pj4APz8/AEBA
        QABCQkIAQ0NDAERERABFRUUAR0dHAEhISABJSUkASkpKAEtLSwBMTEwATU1NAE9PTwBQUFAAUVFRAFJS
        UgBUVFQAVVVVAFZWVgBYWFgAW1tbAF1dXQBfX18AYGBgAGFhYQBjY2MAZGRkAGZmZgBnZ2cAaGhoAGlp
        aQBqamoAbW1tAHR0dAB2dnYAd3d3AHl5eQB6enoAfHx8AH19fQB/f38AgICAAIGBgQCEhIQAhYWFAIeH
        hwCIiIgAiYmJAIqKigCLi4sAjIyMAI2NjQCOjo4AkJCQAJGRkQCSkpIAk5OTAJSUlACVlZUAlpaWAJeX
        lwCYmJgAmZmZAJqamgCbm5sAnZ2dAJ6engChoaEAoqKiAKSkpAClpaUAp6enAK2trQCurq4Ar6+vALGx
        sQCysrIAs7OzALS0tAC1tbUAtra2ALi4uAC5ubkAurq6ALu7uwC8vLwAvb29AL6+vgC/v78AwMDAAMHB
        wQDCwsIAw8PDAMTExADFxcUAxsbGAMjIyADJyckAy8vLAMzMzADNzc0Azs7OAM/PzwDR0dEA09PTANTU
        1ADV1dUA1tbWANjY2ADZ2dkA2traANvb2wDc3NwA3d3dAN7e3gDf398A4ODgAOHh4QDi4uIA5OTkAOXl
        5QDm5uYA5+fnAOjo6ADp6ekA6urqAOvr6wDt7e0A7u7uAO/v7wDw8PAA8fHxAPLy8gDz8/MA9PT0APX1
        9QD29vYA9/f3APj4+AD5+fkA+vr6APv7+wD8/PwA/f39AP7+/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnp2cnZ2enZ2dnZ2dnJydnZ2dnZ2dnZycnZ2dnJ2dnZ2dm5ubnJucnJybnJucm5qbnJybm5uc
        nJybm5ucm5uanZ2bm5ybnJubnJybnJucnJubnJybm5ubnJybm5ybnJudnJubnJybnJucnIp4ZGFshJp7
        dZubmphthpybm5ybm52dm5ubm5ybkF4qAwYFBgY8iwYFgpybawYhnZybm5ucnJ2bm5ubmGIWBhgfBj9e
        FG+ULCKOnJx9EkKcm5ubm5udnJybm5VABR9mixAplZuFg0I+P0JCQkI7QkF/nJybm52dm5yWOQU/j5tq
        BWucnJyWgIGBgYKBgYBwE46bnJybnZ2bm04FBjiAnDoGlJubm5yEWVleX2FkZF8im5ubnJycnZtzBDpK
        BgMxDD2cm5qcm08FBQUFBQUFBgGOm5ubnJyclyURi5t5PQQFAw4jKSeYEAUFBQUFBQUFBX6bm5ucnZ1x
        Bliam5ubYAVDRDowXHwFBQUFBQUFBQUFZJybm5udnEgDjJubm5xXBoWbm5uaXQUFBQUFBQUFBQVTm5yb
        m52cGjCbnJubnE4ElJubm5s3BQUFBQUFBQUFBTOcm5ybnY4CUZucnJubQgCZm5uclQcFBQUFBQUFBQUF
        CZKcm5ydhwYeLSwsLS0UBCssLFZ5BQUFBQUFBQUFBQUFgpubnJ2GBQ8bGxobGg0EKywsQ5J3dXRwb2xn
        ZGNiYTBompubnY0CS5ubm5ycQwGXnJ2anJtpSZCcnJubhlN4ZlWcm5qdnRwvnJucm5tQBJKbm5ubnE0D
        l5ybnJtnBnZ6KY+NiZqcSAOLnJucm1cFhpucnJubPwuanJubnDwFj5pUAwwIjJ1yBVqanJubYgZDSEFB
        RU8YJpmbm5yIBD+cm5uPNC6UnZgkGo6bekcEBQUABAcABAUHHFaOm0kFeJubm5uam5ycm3IFQkMEBDsH
        NZObm5dkBTYbBRdSBj+am5ucm5ybnZybmksFBkyImzIKlJucnFQEg5ZpGgUdi5ubnJubnJydnZublTcG
        UJKbYwVvmpuWGyiam3EUEH2bm5ubm5ubnJ2cnJuclEIFJ26KCiyYmmQFYYNEBSB/nJubm5ubnJucnZyb
        nJubmmQWBR0ZBkdnDAUoBANGjZybnJubm5ybnJuenJubnJubm5FbKQMFBgUGBRVPgJubm5ycm5ubnJub
        nJ2cm5ubnJucm5ubh3hlZHKDmJqbnJubm5ybm5ubm5ybnZ2bm5ubnJubnJucm5ubnJubm5ybnJubm5yb
        m5ucm5ycnZybm5ubm5ubnJubm5ybnJubm5ybnJubm5ybm5ubm52dnZ2cnZycnZ2cnZ2dnJ2cnJ2dnJ2c
        nZ2dnJ2dnJ2dngAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>